### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Category {
  categoryId: String
  children: [Category]
  description: String
  id: ID
  level: Int
  name: String
  path: String
  products: [Product]
  urlKey: String
}

type Edge {
  cursor: String
  node: Product
}

type Mutation {
  addProduct(brand: String!, categoryId: String, description: String, imageUrl: String!, model: String, name: String!, price: String!, primaryCategory: String, primaryTitle: String!, productCategory: String, secondaryTitle: String, title: String!, urlKey: String!): Product
  deleteProduct(id: String!): Product!
  signupUser(email: String!, password: String!, phonenumber: String!, username: String!): User
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
}

type Product {
  brand: String
  categoryId: String
  condition: String
  description: String
  id: String
  imageUrl: String
  index: Int
  model: String
  name: String
  price: String
  primaryCategory: String
  primaryTitle: String
  productCategory: String
  secondaryTitle: String
  title: String
  urlKey: String
}

type ProductConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [ProductEdge]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type ProductEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Product
}

type Query {
  childrenCategory(id: String): [Category]
  levelCategories(level: Int): [Category]
  products(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the elements in the list that come before the specified cursor"""
    before: String

    """Returns the first n elements from the list."""
    first: Int

    """Returns the last n elements from the list."""
    last: Int
  ): ProductConnection
  users: [User]
}

type Response {
  edges: [Edge]
  pageInfo: PageInfo
}

type User {
  email: String
  id: Int
  password: String
  phonenumber: String
  purchaseHistory: [Int]
  recentlyViewed: [Int]
  username: String
}